---
# These jobs will build the GPII/gpii-dataloader Docker image.
#
# The variables git_*_{repo,branch} allow for the flexibility to pick
# and match the branches are necessary. Ideally, they should be equal
# but we are not enforcing this here in case some odd situation shows
# up and we need to break away from that convention.
#
# A similar situation happens with the docker_tag variable.
#
# It should be noted that the version of Node.js being used in each
# project is really defined in the Dockerfile (FROM). The goal of
# specifying it here as well is because we need this information at
# configuration time to know which Jenkins job we should be downstream
# to.
#
# Before each build, a cleanup runs to remove the previously created
# layer so avoid working with stale data. This is necessary during
# code changes otherwise Docker will be happy with the existing
# layer that matches the string statement from the Dockerfile. This
# is useful for lowers layers (e.g. CentOS and Node.js) so we don't
# have to rebuild, but it creates a problem here. We still taking
# advantage of not having to rebuild lower layers, but rebuilding
# our layers is unavoidable.
#
# Finally, you should create a new project node for each version
# that should be built.

- defaults:
    name: gpii-dataloader

    git_app_repo: https://github.com/GPII/universal.git
    git_app_branch: master

    git_docker_repo: https://github.com/gpii-ops/gpii-dataloader.git
    git_docker_branch: master
    docker_username: gpii
    docker_image: gpii-dataloader
    docker_tag: latest

    build_timeout: 30
    email_recipient: gpii-infra-notifications@lists.gpii.net
    jenkins_node: i-0027.tor1.incd.ca

- project:
    name: gpii-dataloader-master
    jenkins_tag: master
    git_app_branch: master
    git_docker_branch: master
    docker_tag: latest
    jobs:
      - 'gpii-dataloader-all'

# WARNING: Be careful changing anything below.

# Used to ensure only one `docker push` command runs at a time
- wrapper:
    name: gpii-dataloader-docker-push
    wrappers:
      - exclusion:
          resources:
            - 'gpii-dataloader-docker-push'

- job-group:
    name: 'gpii-dataloader-all'
    jobs:
      - 'gpii-dataloader-{jenkins_tag}'
      - 'gpii-dataloader-{jenkins_tag}-build'
      - 'gpii-dataloader-{jenkins_tag}-release'
      - 'gpii-dataloader-{jenkins_tag}-cleanup'

- job-template:
    defaults: gpii-dataloader
    name: 'gpii-dataloader-{jenkins_tag}'
    description: 'Builds, tests and pushes the GPII dataloader Docker image'
    project-type: multijob
    concurrent: false
    node: '{jenkins_node}'
    wrappers:
      - timeout:
          timeout: '{build_timeout}'
          abort: yes
    publishers:
      - email:
            recipients: '{email_recipient}'
    scm:
      - git:
          skip-tag: true
          shallow-clone: true
          basedir: docker
          url: '{git_docker_repo}'
          branches:
            - '{git_docker_branch}'
      - git:
          skip-tag: true
          shallow-clone: true
          basedir: app
          url: '{git_app_repo}'
          branches:
            - '{git_app_branch}'
    triggers:
      - github
      - reverse:
          jobs: 'docker-gpii-universal-{jenkins_tag}'
          result: success
    builders:
      - multijob:
          name: Cleanup
          condition: SUCCESSFUL
          projects:
            - name: gpii-dataloader-{jenkins_tag}-cleanup
              predefined-parameters: parent_workspace=$WORKSPACE/docker
      - multijob:
          name: Build
          condition: SUCCESSFUL
          projects:
            - name: gpii-dataloader-{jenkins_tag}-build
              predefined-parameters: parent_workspace=$WORKSPACE/docker
      - multijob:
          name: Release
          condition: SUCCESSFUL
          projects:
            - name: gpii-dataloader-{jenkins_tag}-release
              predefined-parameters: parent_workspace=$WORKSPACE/docker

- job-template:
    defaults: gpii-dataloader
    name: 'gpii-dataloader-{jenkins_tag}-cleanup'
    description: 'Removes build artifacts'
    node: '{jenkins_node}'
    workspace: $parent_workspace
    builders:
      - shell: docker rmi -f {docker_username}/{docker_image}:{docker_tag} || echo "docker rmi failed. image probably does not exist"

- job-template:
    defaults: gpii-dataloader
    name: 'gpii-dataloader-{jenkins_tag}-build'
    description: 'Builds Docker image'
    node: '{jenkins_node}'
    workspace: $parent_workspace
    builders:
      - shell: docker build --pull -t {docker_username}/{docker_image}:{docker_tag} .

- job-template:
    defaults: gpii-dataloader
    name: 'gpii-dataloader-{jenkins_tag}-release'
    description: 'Publishes to Docker Hub'
    node: '{jenkins_node}'
    workspace: $parent_workspace
    wrappers:
      - gpii-dataloader-docker-push
    builders:
      - critical-block-start
      - shell: docker push {docker_username}/{docker_image}:{docker_tag}
      - critical-block-end
